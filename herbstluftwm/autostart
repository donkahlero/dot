#!/usr/bin/env bash

# ██░ ██▓█████ ██▀███  ▄▄▄▄    ██████▄▄▄█████▓██▓    █    ██  █████▄▄▄█████▓
# ▓██░ ██▓█   ▀▓██ ▒ ██▓█████▄▒██    ▒▓  ██▒ ▓▓██▒    ██  ▓██▓██   ▒▓  ██▒ ▓▒
# ▒██▀▀██▒███  ▓██ ░▄█ ▒██▒ ▄█░ ▓██▄  ▒ ▓██░ ▒▒██░   ▓██  ▒██▒████ ░▒ ▓██░ ▒░
# ░▓█ ░██▒▓█  ▄▒██▀▀█▄ ▒██░█▀   ▒   ██░ ▓██▓ ░▒██░   ▓▓█  ░██░▓█▒  ░░ ▓██▓ ░
# ░▓█▒░██░▒████░██▓ ▒██░▓█  ▀█▒██████▒▒ ▒██▒ ░░██████▒▒█████▓░▒█░     ▒██▒ ░
# ▒ ░░▒░░░ ▒░ ░ ▒▓ ░▒▓░▒▓███▀▒ ▒▓▒ ▒ ░ ▒ ░░  ░ ▒░▓  ░▒▓▒ ▒ ▒ ▒ ░     ▒ ░░
# ▒ ░▒░ ░░ ░  ░ ░▒ ░ ▒▒░▒   ░░ ░▒  ░ ░   ░   ░ ░ ▒  ░░▒░ ░ ░ ░         ░
# ░  ░░ ░  ░    ░░   ░ ░    ░░  ░  ░   ░       ░ ░   ░░░ ░ ░ ░ ░     ░
# ░  ░  ░  ░  ░  ░     ░           ░             ░  ░  ░

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# Remove the existing keybinds
hc keyunbind --all

# Keybinds
# CMD key as MOD
Mod=Mod4
hc keybind $Mod-d spawn rofi -show combi
hc keybind $Mod-n spawn networkmanager_dmenu
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-0 spawn slock
hc keybind $Mod-Return spawn kitty

# New wallpaper
hc keybind $Mod-w spawn ~/.config/herbstluftwm/wallpaper.sh

#XF86Keys
# Audio
hc keybind XF86AudioRaiseVolume spawn pamixer -i 2
hc keybind XF86AudioLowerVolume spawn pamixer -d 2
hc keybind XF86AudioMute spawn pamixer -t

# Screen Backlight
hc keybind XF86MonBrightnessUp spawn brightnessctl s 50+
hc keybind XF86MonBrightnessDown spawn brightnessctl s 50-

# Keyboard Backlight
hc keybind XF86KbdBrightnessUp spawn brightnessctl s 50+
hc keybind XF86KbdBrightnessDown spawn brightnessctl s 50-

# Play/Next/Prev
hc keybind XF86AudioPlay spawn playerctl play-pause
hc keybind XF86AudioNext spawn playerctl next
hc keybind XF86AudioPrev spawn playerctl previous

# Reset Screens
hc keybind XF86LaunchA spawn autorandr --change && hc detect_monitors && ~/.config/herbstluftwm/wallpaper.sh

# Frame and Windows interaction
# Focusing
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right
# Moving
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right
# Splitting
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
hc keybind $Mod-Control-space split explode
# Resizing
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# Tags
tag_names=(0001 0010 0011 0100 0101 0110 0111 1000 1001)
tag_keys=( {1..9} )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# lb.theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_bg_normal_color '#5c6370'
hc set frame_bg_active_color '#26ffd4'
hc set frame_border_width 0
hc set always_show_frame 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 5
hc set frame_gap 5

hc attr theme.active.color '#fc59a6'
hc attr theme.normal.color '#5c9fff'
hc attr theme.urgent.color '#fb055a'
hc attr theme.inner_width 0
hc attr theme.border_width 5
hc attr theme.floating.outer_width 0
hc attr theme.floating.border_width 5

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# Detect monitors
xrandr --dpi 144
autorandr --change
hc detect_monitors

if hc silent new_attr bool my_not_first_autostart ; then
    dunst &
    udiskie &
    flameshot &
    blueman-applet &
    battery-notify &
    xautolock -time 10 -locker slock &
fi

killall polybar
killall hideIt.sh
polybar &
feh --bg-fill ~/.config/herbstluftwm/wallpaper.jpeg &

# Wait until we go down again...
trap 'herbstclient emit_hook quit_panel' TERM
herbstclient pad 0 30
herbstclient emit_hook quit_panel
sleep 1
herbstclient --wait '^(quit_panel|reload).*'
kill -TERM "${pids[@]}" >/dev/null 2>&1

# Exit gracefully
exit 0
